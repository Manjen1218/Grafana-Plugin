{
	"Update" : "2025/04/09",
	"Inc"    : "Accton",
	"Project": "K2V6-JRD , For FW 3.83.3",
	"Author" : "Edison",
	"Description" : "For the K2V6-JRD log analysis usage",
	
	"GlobalErr": [
		{"pattern":"SSH or ping Raspberry Pi issue"},
		{"pattern":"FATAL ERROR: Network error: Software caused connection abort"},
		{"pattern":"webservice err"},
		{"pattern":"SFP ETPM query err"},
		{"pattern":"cannot open /dev/ttyUSB"},
		{"pattern":"Failed at running "},
		{"pattern":"Failed to link"},
		{"pattern":"Failed to configure PRBS"},
		{"pattern":"Error: Identication"},
		{"pattern":"Card 192.168.1.2 unreachable!"},
		{"pattern":"VET_FAIL_TYPE"},
		{"pattern":"VET_FAIL_MSG"},
		{"pattern":"BERT failed"},
		{"pattern":"Find the uC i2c address 0x46 : FAIL"},
		{"pattern":"Error: can't get i2cBUS"},
		{"pattern":"check the Power Supply First"},
		{"pattern":"Error caught from running"},
		{"pattern":"Can't run parallel commands"},
		{"pattern":"SNP command failed"},
		{"pattern":"TEST ERROR!"},
		{"pattern":"Error: Failed in processing output signals"},
		{"pattern":"snps_serdes_bathtub_analysis returned no result"},
		{"pattern":"K2 is not alive retries left 10"},
		{"pattern":"ERROR: TPM versions"},
		{"pattern":"Error: Unable to read data from"},		
		{"pattern":"Check SN fail"},
		{"pattern":"LED TEST fail"},
		{"pattern":"Gpio values do not match"},
		{"pattern":"Failed to find I2C bus"},
		{"pattern":"mismatch - expected"},
		{"pattern":"errors in dmesg detected"},
		{"pattern":"Link flaps counter exceeded threshold"},
		{"pattern":"Probe the SFP eeprom FAIL"},
		{"pattern":"Error: SDR"},
		{"pattern":"is expected to be available"},
		{"pattern":"Error: VDD18_EFUSE"},
		{"pattern":"Error: Tx error: Expected"},
		{"pattern":"Error: Rx error: Expected"},
		{"pattern":"Error: check RTC real not exist"},
		{"pattern":"Connect to 192.168.1.2 FAIL"},
		{"pattern":"ERROR: card not detected"},
		{"pattern":"Check ACC SW version Fail"},
		{"pattern":"Error: Alpine PBS"},
		{"pattern":"Error: SPI flash_read"},
		{"pattern":"Error: Failed to read"},
		{"pattern":"failed activating firmware update"},
		{"pattern":"Error: received bits per second"},
		{"pattern":"exceeded the maximum allowed"},
		{"pattern":"Error: expander_get_gpio_entry"},
		{"pattern":"bad argument #"},
		{"pattern":"Host is unreachable"},
		{"pattern":"PMU: Error"},
		{"pattern":"doesn't match the golden"},
		{"pattern":"Temperature Test Failed"},
		{"pattern":"Card type missing is not supported"},
		{"pattern":"could not bring link up"},
		{"pattern":"versions doesn't match"}
	],
	
	"WhiteList" : [
		
	],
	
	"TestItems": [
		{
			"name":"_f_print_env",
			"beg":"print environment ",
			"end":"<_f_print_env>",
			"passstr":"PASS",
			"fail type" : [
			]
		},
		{
			"name":"_f_record_time",
			"beg":" record time ",
			"end":"<_f_record_time>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_Get_Board_Component_Info",
			"beg":"Get Board Component information",
			"end":"<_f_Get_Board_Component_Info>",
			"passstr":"PASS",
			"fail type" : [
			]
		},
		{
			"name":"_f_Get_Board_Baking_Info",
			"beg":"Get Board Baking Info",
			"end":"<_f_Get_Board_Baking_Info>",
			"passstr":"PASS",
			"fail type" : [
			]
		},
		{
			"name":"_f_env_set_and_check",
			"beg":"env set and check ",
			"end":"<_f_env_set_and_check>",
			"passstr":"-- Check PASS  --",
			"fail type" : [
				{
					"pattern":"Find the uC i2c address 0x46 : FAIL",
					"Desc":"Chec the PCIe is clear then insert the cable fine"
				},
				{
					"pattern":"Check uC Alive : FAIL",
					"Desc":"Can not find the uC output alive string"
				}
			]
		},
		{
			"name":"_f_get_riser_sn",
			"beg":"get riser sn    ",
			"end":"<_f_get_riser_sn>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_set_configure",
			"beg":"set configure ",
			"end":"<_f_set_configure>",
			"passstr":"",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_setup_ssh_1st",
			"beg":" setup ssh 1st    ",
			"end":"<_f_setup_ssh_1st>",
			"passstr":"Setup SSH PASS",
			"fail type" : [
			]
		},
		{
			"name":"_f_update_acc_uc",
			"beg":" update acc uc   ",
			"end":"<_f_update_acc_uc>",
			"passstr":"100 % complete ",
			"fail type" : [
			]
		},
		{
			"name":"_f_setup_ssh_2nd",
			"beg":" setup ssh 2nd ",
			"end":"<_f_setup_ssh_2nd>",
			"passstr":" Setup SSH PASS ",
			"fail type" : [
			]
		},
		{
			"name":"_f_update_anpa_uc",
			"beg":" update anpa uc   ",
			"end":"<_f_update_anpa_uc>",
			"passstr":"100 % complete ",
			"fail type" : [
			]
		},
		{
			"name":"_f_restore",
			"beg":" restore        ",
			"end":"<_f_restore>",
			"passstr":"restore by coap PASS",
			"fail type" : [
			]
		},
		{
			"name":"_f_show_record_time",
			"beg":" show record time ",
			"end":"<_f_show_record_time>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_restore_test_manager",
			"beg":" restore test manager ",
			"end":"<_f_restore_test_manager>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_restore_test_manager_report",
			"beg":" restore test manager report  ",
			"end":"<_f_restore_test_manager_report>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_get_RTC_PN",
			"beg":"get RTC PN ",
			"end":"<_f_get_RTC_PN>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_init_test",
			"beg":"  init test ",
			"end":"<_f_init_test>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_init_test_report",
			"beg":" init test report ",
			"end":"<_f_init_test_report>",
			"passstr":"--- TOTAL RESULT : PASS ---",
			"fail type" : [

			]
		},
		{
			"name":"_f_fru_burn",
			"beg":"fru burn ",
			"end":"<_f_fru_burn>",
			"passstr":"Passed: 1",
			"fail type" : [
				{
					"pattern":"Passed: 0",
					"Desc":""
				}
			]
		},
		{
			"name":"_f_fru_burn_report",
			"beg":"fru burn report ",
			"end":"<_f_fru_burn_report>",
			"passstr":"--- TOTAL RESULT : PASS ---",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_Second_source_Test",
			"beg":" Second source Test ",
			"end":"<_f_Second_source_Test>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_Second_source_Test_report",
			"beg":" Second source Test report ",
			"end":"<_f_Second_source_Test_report>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_fw_update",
			"beg":" fw update ",
			"end":"<_f_fw_update>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_fw_update_report",
			"beg":" fw update report ",
			"end":"<_f_fw_update_report>",
			"passstr":"--- TOTAL RESULT : PASS ---",
			"fail type" : [

			]
		},
		{
			"name":"_f_gen_fru_data",
			"beg":"Generate fru data ",
			"end":"<_f_gen_fru_data>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_upload_soc_tools",
			"beg":"upload soc tools ",
			"end":"<_f_upload_soc_tools>",
			"passstr":" tcpdump",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_check_led",
			"beg":"check led ",
			"end":"<_f_check_led>",
			"passstr":"",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_check_uc_flash_check_sum",
			"beg":"check uc flash check sum ",
			"end":"<_f_check_uc_flash_check_sum>",
			"passstr":"",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_dev_check",
			"beg":"dev check ",
			"end":"<_f_dev_check>",
			"passstr":"--- Check Result PASS ---",
			"fail type" : [
				{
					"pattern":"Probe the SFP eeprom FAIL",
					"Desc":"Check the SFP LB or QSFP hw curit"
				}				
			]
		},
		{
			"name":"_f_enable_spi_c",
			"beg":"enable spi ",
			"end":"<_f_enable_spi_c>",
			"passstr":"",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_run_test_manager",
			"beg":"run test manager  ",
			"end":"",
			"passstr":"",
			"fail type" : [
				{
					"pattern":"Running TIMEOUT",
					"Desc":"Running Timeout"
				}
			]
		},
		{
			"name":"_f_get_GBIC_SN",
			"beg":"get GBIC SN  ",
			"end":"<_f_get_GBIC_SN>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_run_test_manager_report",
			"beg":"run test manager report ",
			"end":"<_f_run_test_manager_report>",
			"passstr":"--- TOTAL RESULT : PASS ---",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_extra_baking",
			"beg":"P/T extra baking",
			"end":"<_f_extra_baking>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_smart_baking",
			"beg":"P/T smart baking",
			"end":"<_f_smart_baking>",
			"passstr":"",
			"fail type" : [

			]
		},
		{
			"name":"_f_baking_info",
			"beg":"baking info ",
			"end":"<_f_baking_info>",
			"passstr":"--- Baking Result : PASS ---",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_baking_info_2nd",
			"beg":"baking info 2nd",
			"end":"<_f_baking_info_2nd>",
			"passstr":"--- Baking Result : PASS ---",
			"fail type" : [

			]
		},
		{
			"name":"_f_Check_Sensors",
			"beg":"Check Sensors  ",
			"end":"<_f_Check_Sensors>",
			"passstr":"..... PASS",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_check_fru_data",
			"beg":"check fru data ",
			"end":"<_f_check_fru_data>",
			"passstr":"",
			"fail type" : [
				
			]
		},
		{
			"name":"_f_Double_Check_SN",
			"beg":"double-check SN",
			"end":"<_f_Double_Check_SN>",
			"passstr":"",
			"fail type" : [
				
			]
		},



		{
			"name":"_f_pts_check",
			"beg":"pts check    ",
			"end":"<_f_pts_check>",
			"passstr":"",
			"fail type" : [
			]
		},
		{
			"name":"_f_pts_check_report",
			"beg":"pts check report ",
			"end":"<_f_pts_check_report>",
			"passstr":"",
			"fail type" : [
			]
		},

		{
			"name":"Summary",
			"beg":" Test_Start",
			"end":"Capture end",
			"passstr":"",
			"fail type" : [
				
			]
		}
	]
	
}
